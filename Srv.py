import base64
import json
import requests
import time

# ==== –ù–ê–°–¢–†–û–ô–ö–ò ====
token  = "TOKEN"
owner  = "SatbytePnts"
repo   = "OutCmd"
branch = "main"
path_cmd = "logs/GetCmd.txt"
path_out = "logs/OutCmd.txt"

headers = {
    "Authorization": f"Bearer {token}",
    "Accept": "application/vnd.github+json",
    "User-Agent": "PythonClient"
}


def get_file_content(path):
    url = f"https://api.github.com/repos/{owner}/{repo}/contents/{path}"
    r = requests.get(url, headers=headers)
    if r.status_code == 200:
        content = r.json()["content"]
        return base64.b64decode(content).decode("utf-8").strip()
    return None

def update_github_file(path, text, message="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"):
    url = f"https://api.github.com/repos/{owner}/{repo}/contents/{path}"
    r = requests.get(url, headers=headers)
    sha = r.json().get("sha") if r.status_code == 200 else None

    encoded_content = base64.b64encode(text.encode("utf-8")).decode("utf-8")

    body = {
        "message": message,
        "content": encoded_content,
        "branch": branch
    }
    if sha:
        body["sha"] = sha

    r = requests.put(url, headers=headers, data=json.dumps(body))
    if r.status_code in [200, 201]:
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ ({r.status_code}):", r.text)


while True:
    cmd = input("–í–≤–µ–¥–∏—Ç–µ PowerShell-–∫–æ–º–∞–Ω–¥—É (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞): ")
    if cmd.lower() == "exit":
        update_github_file(path_cmd, "exit", "–ö–æ–º–∞–Ω–¥–∞ –≤—ã—Ö–æ–¥–∞")
        break


    update_github_file(path_cmd, cmd, "–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")


    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
    last_result = None
    for i in range(20):
        time.sleep(1)
        result = get_file_content(path_out)
        if result and result != last_result:
            print("üì• –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:\n")
            print(result)
            break
    else:
        print("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")
